// For format details, see https://containers.dev/implementors/json_reference/
{
    "name": "odin-data devcontainer",
    "build": {
        "dockerfile": "../Dockerfile",
        "context": "..",
        "target": "developer"
    },
    "features": {
        // add quality of life features for developers including git config integration
        // note this is slow for the odin-data container - leaving out for now
        "ghcr.io/devcontainers/features/common-utils:2": {
            // don't upgrade to make this similar to the runtime container
            "upgradePackages": false
        }
    },
    // IMPORTANT for this devcontainer to work with docker VSCODE_REMOTE_USER must be
    // set to vscode. You will run as vscode with full sudo rights.
    // For podman it should be left blank. You will run as root but host mounts
    // will be owned by your user.
    "remoteUser": "${localEnv:VSCODE_REMOTE_USER}",
    "customizations": {
        "vscode": {
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "ms-python.vscode-pylance",
                "tamasfe.even-better-toml",
                "redhat.vscode-yaml",
                "ryanluker.vscode-coverage-gutters",
                "epicsdeb.vscode-epics",
                "charliermarsh.ruff",
                "ms-vscode.cmake-tools",
                "ms-vscode.cpptools"
            ]
        }
    },
    // You can place any outside of the container before-launch commands here
    "initializeCommand": "bash .devcontainer/initializeCommand ${devcontainerId}",
    // One time global setup commands inside the container
    "postCreateCommand": "bash .devcontainer/postCreateCommand ${devcontainerId}",
    "runArgs": [
        // Allow the container to access the host X11 display and EPICS CA
        "--net=host",
        // Make sure SELinux does not disable write access to host filesystems like tmp
        "--security-opt=label=disable"
    ],
    // Mount the parent of the project folder so we can access peer projects
    "workspaceMount": "source=${localWorkspaceFolder}/..,target=/workspaces,type=bind",
    // mount in other useful files from the host
    "mounts": [
        // add extra mounts below
        // "source=${localWorkspaceFolder},target=/odin-data,type=bind"
        "source=/dev/shm,target=/dev/shm,type=bind"
    ]
}